// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebAppMVC.DBOperations;

#nullable disable

namespace MyWebAppMVC.Migrations
{
    [DbContext(typeof(WarehouseDBContext))]
    partial class WarehouseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyWebAppMVC.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "Images\\Product\\spray_paint.jpg",
                            Name = "Winsor & Newton Spray Paint",
                            Price = 30m,
                            Quantity = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Image = "Images\\Product\\sketch_pad.jpg",
                            Name = "Faber-Castell Sketch Pad",
                            Price = 35m,
                            Quantity = 3,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 3,
                            Image = "Images\\Product\\a5_paper.jpg",
                            Name = "Premier A5 Paper",
                            Price = 50m,
                            Quantity = 2,
                            WarehouseId = 3
                        });
                });

            modelBuilder.Entity("MyWebAppMVC.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactNo = "0872662523",
                            Email = "evansart@gmail.com",
                            Name = "Evans Art"
                        },
                        new
                        {
                            Id = 2,
                            ContactNo = "0861273743",
                            Email = "still.art@hotmail.com",
                            Name = "Still Art"
                        },
                        new
                        {
                            Id = 3,
                            ContactNo = "0834567351",
                            Email = "fine.art@gmail.com",
                            Name = "Fine Art"
                        });
                });

            modelBuilder.Entity("MyWebAppMVC.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("warehouse");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123, Downing Street, Dublin",
                            ContactNo = "0872734567",
                            Location = "Ireland",
                            Name = "Winsor & Newton"
                        },
                        new
                        {
                            Id = 2,
                            Address = "421, Unter den Linden, Berlin",
                            ContactNo = "0834562874",
                            Location = "France",
                            Name = "Faber-Castell"
                        },
                        new
                        {
                            Id = 3,
                            Address = "375, Beauvelgrade Street, Paris",
                            ContactNo = "0865748902",
                            Location = "Germany",
                            Name = "Amazon"
                        });
                });

            modelBuilder.Entity("ProductSupplier", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("SuppliersId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "SuppliersId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("ProductSupplier");
                });

            modelBuilder.Entity("MyWebAppMVC.Models.Product", b =>
                {
                    b.HasOne("MyWebAppMVC.Models.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("ProductSupplier", b =>
                {
                    b.HasOne("MyWebAppMVC.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebAppMVC.Models.Supplier", null)
                        .WithMany()
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWebAppMVC.Models.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
